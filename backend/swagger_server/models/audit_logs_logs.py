# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AuditLogsLogs(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, timestamp: datetime=None, level: str=None, message: str=None, user_id: str=None, ip_address: str=None, action: str=None):  # noqa: E501
        """AuditLogsLogs - a model defined in Swagger

        :param timestamp: The timestamp of this AuditLogsLogs.  # noqa: E501
        :type timestamp: datetime
        :param level: The level of this AuditLogsLogs.  # noqa: E501
        :type level: str
        :param message: The message of this AuditLogsLogs.  # noqa: E501
        :type message: str
        :param user_id: The user_id of this AuditLogsLogs.  # noqa: E501
        :type user_id: str
        :param ip_address: The ip_address of this AuditLogsLogs.  # noqa: E501
        :type ip_address: str
        :param action: The action of this AuditLogsLogs.  # noqa: E501
        :type action: str
        """
        self.swagger_types = {
            'timestamp': datetime,
            'level': str,
            'message': str,
            'user_id': str,
            'ip_address': str,
            'action': str
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'level': 'level',
            'message': 'message',
            'user_id': 'user_id',
            'ip_address': 'ip_address',
            'action': 'action'
        }
        self._timestamp = timestamp
        self._level = level
        self._message = message
        self._user_id = user_id
        self._ip_address = ip_address
        self._action = action

    @classmethod
    def from_dict(cls, dikt) -> 'AuditLogsLogs':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuditLogs_logs of this AuditLogsLogs.  # noqa: E501
        :rtype: AuditLogsLogs
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this AuditLogsLogs.


        :return: The timestamp of this AuditLogsLogs.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this AuditLogsLogs.


        :param timestamp: The timestamp of this AuditLogsLogs.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def level(self) -> str:
        """Gets the level of this AuditLogsLogs.


        :return: The level of this AuditLogsLogs.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level: str):
        """Sets the level of this AuditLogsLogs.


        :param level: The level of this AuditLogsLogs.
        :type level: str
        """

        self._level = level

    @property
    def message(self) -> str:
        """Gets the message of this AuditLogsLogs.


        :return: The message of this AuditLogsLogs.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this AuditLogsLogs.


        :param message: The message of this AuditLogsLogs.
        :type message: str
        """

        self._message = message

    @property
    def user_id(self) -> str:
        """Gets the user_id of this AuditLogsLogs.


        :return: The user_id of this AuditLogsLogs.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this AuditLogsLogs.


        :param user_id: The user_id of this AuditLogsLogs.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def ip_address(self) -> str:
        """Gets the ip_address of this AuditLogsLogs.


        :return: The ip_address of this AuditLogsLogs.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address: str):
        """Sets the ip_address of this AuditLogsLogs.


        :param ip_address: The ip_address of this AuditLogsLogs.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def action(self) -> str:
        """Gets the action of this AuditLogsLogs.


        :return: The action of this AuditLogsLogs.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action: str):
        """Sets the action of this AuditLogsLogs.


        :param action: The action of this AuditLogsLogs.
        :type action: str
        """

        self._action = action
