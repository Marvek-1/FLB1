# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class GenericIntegration(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, service_name: str=None, api_key: str=None, configuration: object=None, webhook_url: str=None):  # noqa: E501
        """GenericIntegration - a model defined in Swagger

        :param service_name: The service_name of this GenericIntegration.  # noqa: E501
        :type service_name: str
        :param api_key: The api_key of this GenericIntegration.  # noqa: E501
        :type api_key: str
        :param configuration: The configuration of this GenericIntegration.  # noqa: E501
        :type configuration: object
        :param webhook_url: The webhook_url of this GenericIntegration.  # noqa: E501
        :type webhook_url: str
        """
        self.swagger_types = {
            'service_name': str,
            'api_key': str,
            'configuration': object,
            'webhook_url': str
        }

        self.attribute_map = {
            'service_name': 'service_name',
            'api_key': 'api_key',
            'configuration': 'configuration',
            'webhook_url': 'webhook_url'
        }
        self._service_name = service_name
        self._api_key = api_key
        self._configuration = configuration
        self._webhook_url = webhook_url

    @classmethod
    def from_dict(cls, dikt) -> 'GenericIntegration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GenericIntegration of this GenericIntegration.  # noqa: E501
        :rtype: GenericIntegration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_name(self) -> str:
        """Gets the service_name of this GenericIntegration.


        :return: The service_name of this GenericIntegration.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name: str):
        """Sets the service_name of this GenericIntegration.


        :param service_name: The service_name of this GenericIntegration.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def api_key(self) -> str:
        """Gets the api_key of this GenericIntegration.


        :return: The api_key of this GenericIntegration.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key: str):
        """Sets the api_key of this GenericIntegration.


        :param api_key: The api_key of this GenericIntegration.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def configuration(self) -> object:
        """Gets the configuration of this GenericIntegration.


        :return: The configuration of this GenericIntegration.
        :rtype: object
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration: object):
        """Sets the configuration of this GenericIntegration.


        :param configuration: The configuration of this GenericIntegration.
        :type configuration: object
        """

        self._configuration = configuration

    @property
    def webhook_url(self) -> str:
        """Gets the webhook_url of this GenericIntegration.


        :return: The webhook_url of this GenericIntegration.
        :rtype: str
        """
        return self._webhook_url

    @webhook_url.setter
    def webhook_url(self, webhook_url: str):
        """Sets the webhook_url of this GenericIntegration.


        :param webhook_url: The webhook_url of this GenericIntegration.
        :type webhook_url: str
        """

        self._webhook_url = webhook_url
