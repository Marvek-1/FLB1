# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DataProcessingResponseStatistics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, rows_processed: int=None, columns_processed: int=None, missing_values_handled: int=None, outliers_detected: int=None):  # noqa: E501
        """DataProcessingResponseStatistics - a model defined in Swagger

        :param rows_processed: The rows_processed of this DataProcessingResponseStatistics.  # noqa: E501
        :type rows_processed: int
        :param columns_processed: The columns_processed of this DataProcessingResponseStatistics.  # noqa: E501
        :type columns_processed: int
        :param missing_values_handled: The missing_values_handled of this DataProcessingResponseStatistics.  # noqa: E501
        :type missing_values_handled: int
        :param outliers_detected: The outliers_detected of this DataProcessingResponseStatistics.  # noqa: E501
        :type outliers_detected: int
        """
        self.swagger_types = {
            'rows_processed': int,
            'columns_processed': int,
            'missing_values_handled': int,
            'outliers_detected': int
        }

        self.attribute_map = {
            'rows_processed': 'rows_processed',
            'columns_processed': 'columns_processed',
            'missing_values_handled': 'missing_values_handled',
            'outliers_detected': 'outliers_detected'
        }
        self._rows_processed = rows_processed
        self._columns_processed = columns_processed
        self._missing_values_handled = missing_values_handled
        self._outliers_detected = outliers_detected

    @classmethod
    def from_dict(cls, dikt) -> 'DataProcessingResponseStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataProcessingResponse_statistics of this DataProcessingResponseStatistics.  # noqa: E501
        :rtype: DataProcessingResponseStatistics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rows_processed(self) -> int:
        """Gets the rows_processed of this DataProcessingResponseStatistics.


        :return: The rows_processed of this DataProcessingResponseStatistics.
        :rtype: int
        """
        return self._rows_processed

    @rows_processed.setter
    def rows_processed(self, rows_processed: int):
        """Sets the rows_processed of this DataProcessingResponseStatistics.


        :param rows_processed: The rows_processed of this DataProcessingResponseStatistics.
        :type rows_processed: int
        """

        self._rows_processed = rows_processed

    @property
    def columns_processed(self) -> int:
        """Gets the columns_processed of this DataProcessingResponseStatistics.


        :return: The columns_processed of this DataProcessingResponseStatistics.
        :rtype: int
        """
        return self._columns_processed

    @columns_processed.setter
    def columns_processed(self, columns_processed: int):
        """Sets the columns_processed of this DataProcessingResponseStatistics.


        :param columns_processed: The columns_processed of this DataProcessingResponseStatistics.
        :type columns_processed: int
        """

        self._columns_processed = columns_processed

    @property
    def missing_values_handled(self) -> int:
        """Gets the missing_values_handled of this DataProcessingResponseStatistics.


        :return: The missing_values_handled of this DataProcessingResponseStatistics.
        :rtype: int
        """
        return self._missing_values_handled

    @missing_values_handled.setter
    def missing_values_handled(self, missing_values_handled: int):
        """Sets the missing_values_handled of this DataProcessingResponseStatistics.


        :param missing_values_handled: The missing_values_handled of this DataProcessingResponseStatistics.
        :type missing_values_handled: int
        """

        self._missing_values_handled = missing_values_handled

    @property
    def outliers_detected(self) -> int:
        """Gets the outliers_detected of this DataProcessingResponseStatistics.


        :return: The outliers_detected of this DataProcessingResponseStatistics.
        :rtype: int
        """
        return self._outliers_detected

    @outliers_detected.setter
    def outliers_detected(self, outliers_detected: int):
        """Sets the outliers_detected of this DataProcessingResponseStatistics.


        :param outliers_detected: The outliers_detected of this DataProcessingResponseStatistics.
        :type outliers_detected: int
        """

        self._outliers_detected = outliers_detected
