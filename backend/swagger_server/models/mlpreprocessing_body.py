# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MlpreprocessingBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data: List[object]=None, target_column: str=None, test_size: float=0.2):  # noqa: E501
        """MlpreprocessingBody - a model defined in Swagger

        :param data: The data of this MlpreprocessingBody.  # noqa: E501
        :type data: List[object]
        :param target_column: The target_column of this MlpreprocessingBody.  # noqa: E501
        :type target_column: str
        :param test_size: The test_size of this MlpreprocessingBody.  # noqa: E501
        :type test_size: float
        """
        self.swagger_types = {
            'data': List[object],
            'target_column': str,
            'test_size': float
        }

        self.attribute_map = {
            'data': 'data',
            'target_column': 'target_column',
            'test_size': 'test_size'
        }
        self._data = data
        self._target_column = target_column
        self._test_size = test_size

    @classmethod
    def from_dict(cls, dikt) -> 'MlpreprocessingBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The mlpreprocessing_body of this MlpreprocessingBody.  # noqa: E501
        :rtype: MlpreprocessingBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> List[object]:
        """Gets the data of this MlpreprocessingBody.


        :return: The data of this MlpreprocessingBody.
        :rtype: List[object]
        """
        return self._data

    @data.setter
    def data(self, data: List[object]):
        """Sets the data of this MlpreprocessingBody.


        :param data: The data of this MlpreprocessingBody.
        :type data: List[object]
        """

        self._data = data

    @property
    def target_column(self) -> str:
        """Gets the target_column of this MlpreprocessingBody.


        :return: The target_column of this MlpreprocessingBody.
        :rtype: str
        """
        return self._target_column

    @target_column.setter
    def target_column(self, target_column: str):
        """Sets the target_column of this MlpreprocessingBody.


        :param target_column: The target_column of this MlpreprocessingBody.
        :type target_column: str
        """

        self._target_column = target_column

    @property
    def test_size(self) -> float:
        """Gets the test_size of this MlpreprocessingBody.


        :return: The test_size of this MlpreprocessingBody.
        :rtype: float
        """
        return self._test_size

    @test_size.setter
    def test_size(self, test_size: float):
        """Sets the test_size of this MlpreprocessingBody.


        :param test_size: The test_size of this MlpreprocessingBody.
        :type test_size: float
        """

        self._test_size = test_size
