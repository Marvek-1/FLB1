# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.global_model_metadata import GlobalModelMetadata  # noqa: F401,E501
from swagger_server import util


class GlobalModel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, version: str=None, weights: List[float]=None, metadata: GlobalModelMetadata=None):  # noqa: E501
        """GlobalModel - a model defined in Swagger

        :param version: The version of this GlobalModel.  # noqa: E501
        :type version: str
        :param weights: The weights of this GlobalModel.  # noqa: E501
        :type weights: List[float]
        :param metadata: The metadata of this GlobalModel.  # noqa: E501
        :type metadata: GlobalModelMetadata
        """
        self.swagger_types = {
            'version': str,
            'weights': List[float],
            'metadata': GlobalModelMetadata
        }

        self.attribute_map = {
            'version': 'version',
            'weights': 'weights',
            'metadata': 'metadata'
        }
        self._version = version
        self._weights = weights
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'GlobalModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GlobalModel of this GlobalModel.  # noqa: E501
        :rtype: GlobalModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self) -> str:
        """Gets the version of this GlobalModel.


        :return: The version of this GlobalModel.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this GlobalModel.


        :param version: The version of this GlobalModel.
        :type version: str
        """

        self._version = version

    @property
    def weights(self) -> List[float]:
        """Gets the weights of this GlobalModel.


        :return: The weights of this GlobalModel.
        :rtype: List[float]
        """
        return self._weights

    @weights.setter
    def weights(self, weights: List[float]):
        """Sets the weights of this GlobalModel.


        :param weights: The weights of this GlobalModel.
        :type weights: List[float]
        """

        self._weights = weights

    @property
    def metadata(self) -> GlobalModelMetadata:
        """Gets the metadata of this GlobalModel.


        :return: The metadata of this GlobalModel.
        :rtype: GlobalModelMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: GlobalModelMetadata):
        """Sets the metadata of this GlobalModel.


        :param metadata: The metadata of this GlobalModel.
        :type metadata: GlobalModelMetadata
        """

        self._metadata = metadata
