# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PerformanceoptimizationBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data_size: int=None, optimization_type: str=None):  # noqa: E501
        """PerformanceoptimizationBody - a model defined in Swagger

        :param data_size: The data_size of this PerformanceoptimizationBody.  # noqa: E501
        :type data_size: int
        :param optimization_type: The optimization_type of this PerformanceoptimizationBody.  # noqa: E501
        :type optimization_type: str
        """
        self.swagger_types = {
            'data_size': int,
            'optimization_type': str
        }

        self.attribute_map = {
            'data_size': 'data_size',
            'optimization_type': 'optimization_type'
        }
        self._data_size = data_size
        self._optimization_type = optimization_type

    @classmethod
    def from_dict(cls, dikt) -> 'PerformanceoptimizationBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The performanceoptimization_body of this PerformanceoptimizationBody.  # noqa: E501
        :rtype: PerformanceoptimizationBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_size(self) -> int:
        """Gets the data_size of this PerformanceoptimizationBody.


        :return: The data_size of this PerformanceoptimizationBody.
        :rtype: int
        """
        return self._data_size

    @data_size.setter
    def data_size(self, data_size: int):
        """Sets the data_size of this PerformanceoptimizationBody.


        :param data_size: The data_size of this PerformanceoptimizationBody.
        :type data_size: int
        """

        self._data_size = data_size

    @property
    def optimization_type(self) -> str:
        """Gets the optimization_type of this PerformanceoptimizationBody.


        :return: The optimization_type of this PerformanceoptimizationBody.
        :rtype: str
        """
        return self._optimization_type

    @optimization_type.setter
    def optimization_type(self, optimization_type: str):
        """Sets the optimization_type of this PerformanceoptimizationBody.


        :param optimization_type: The optimization_type of this PerformanceoptimizationBody.
        :type optimization_type: str
        """
        allowed_values = ["parallel_processing", "caching", "indexing"]  # noqa: E501
        if optimization_type not in allowed_values:
            raise ValueError(
                "Invalid value for `optimization_type` ({0}), must be one of {1}"
                .format(optimization_type, allowed_values)
            )

        self._optimization_type = optimization_type
