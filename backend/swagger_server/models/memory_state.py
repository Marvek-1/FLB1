# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.memory_entry import MemoryEntry  # noqa: F401,E501
from swagger_server import util


class MemoryState(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: str=None, entries: List[MemoryEntry]=None, total_size: int=None, last_updated: datetime=None):  # noqa: E501
        """MemoryState - a model defined in Swagger

        :param user_id: The user_id of this MemoryState.  # noqa: E501
        :type user_id: str
        :param entries: The entries of this MemoryState.  # noqa: E501
        :type entries: List[MemoryEntry]
        :param total_size: The total_size of this MemoryState.  # noqa: E501
        :type total_size: int
        :param last_updated: The last_updated of this MemoryState.  # noqa: E501
        :type last_updated: datetime
        """
        self.swagger_types = {
            'user_id': str,
            'entries': List[MemoryEntry],
            'total_size': int,
            'last_updated': datetime
        }

        self.attribute_map = {
            'user_id': 'user_id',
            'entries': 'entries',
            'total_size': 'total_size',
            'last_updated': 'last_updated'
        }
        self._user_id = user_id
        self._entries = entries
        self._total_size = total_size
        self._last_updated = last_updated

    @classmethod
    def from_dict(cls, dikt) -> 'MemoryState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MemoryState of this MemoryState.  # noqa: E501
        :rtype: MemoryState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this MemoryState.


        :return: The user_id of this MemoryState.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this MemoryState.


        :param user_id: The user_id of this MemoryState.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def entries(self) -> List[MemoryEntry]:
        """Gets the entries of this MemoryState.


        :return: The entries of this MemoryState.
        :rtype: List[MemoryEntry]
        """
        return self._entries

    @entries.setter
    def entries(self, entries: List[MemoryEntry]):
        """Sets the entries of this MemoryState.


        :param entries: The entries of this MemoryState.
        :type entries: List[MemoryEntry]
        """

        self._entries = entries

    @property
    def total_size(self) -> int:
        """Gets the total_size of this MemoryState.


        :return: The total_size of this MemoryState.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size: int):
        """Sets the total_size of this MemoryState.


        :param total_size: The total_size of this MemoryState.
        :type total_size: int
        """

        self._total_size = total_size

    @property
    def last_updated(self) -> datetime:
        """Gets the last_updated of this MemoryState.


        :return: The last_updated of this MemoryState.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated: datetime):
        """Sets the last_updated of this MemoryState.


        :param last_updated: The last_updated of this MemoryState.
        :type last_updated: datetime
        """

        self._last_updated = last_updated
