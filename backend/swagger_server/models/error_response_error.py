# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ErrorResponseError(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, code: str=None, message: str=None, details: object=None, request_id: str=None, timestamp: datetime=None):  # noqa: E501
        """ErrorResponseError - a model defined in Swagger

        :param code: The code of this ErrorResponseError.  # noqa: E501
        :type code: str
        :param message: The message of this ErrorResponseError.  # noqa: E501
        :type message: str
        :param details: The details of this ErrorResponseError.  # noqa: E501
        :type details: object
        :param request_id: The request_id of this ErrorResponseError.  # noqa: E501
        :type request_id: str
        :param timestamp: The timestamp of this ErrorResponseError.  # noqa: E501
        :type timestamp: datetime
        """
        self.swagger_types = {
            'code': str,
            'message': str,
            'details': object,
            'request_id': str,
            'timestamp': datetime
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'details': 'details',
            'request_id': 'request_id',
            'timestamp': 'timestamp'
        }
        self._code = code
        self._message = message
        self._details = details
        self._request_id = request_id
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorResponseError':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorResponse_error of this ErrorResponseError.  # noqa: E501
        :rtype: ErrorResponseError
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> str:
        """Gets the code of this ErrorResponseError.


        :return: The code of this ErrorResponseError.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this ErrorResponseError.


        :param code: The code of this ErrorResponseError.
        :type code: str
        """

        self._code = code

    @property
    def message(self) -> str:
        """Gets the message of this ErrorResponseError.


        :return: The message of this ErrorResponseError.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this ErrorResponseError.


        :param message: The message of this ErrorResponseError.
        :type message: str
        """

        self._message = message

    @property
    def details(self) -> object:
        """Gets the details of this ErrorResponseError.


        :return: The details of this ErrorResponseError.
        :rtype: object
        """
        return self._details

    @details.setter
    def details(self, details: object):
        """Sets the details of this ErrorResponseError.


        :param details: The details of this ErrorResponseError.
        :type details: object
        """

        self._details = details

    @property
    def request_id(self) -> str:
        """Gets the request_id of this ErrorResponseError.


        :return: The request_id of this ErrorResponseError.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id: str):
        """Sets the request_id of this ErrorResponseError.


        :param request_id: The request_id of this ErrorResponseError.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this ErrorResponseError.


        :return: The timestamp of this ErrorResponseError.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this ErrorResponseError.


        :param timestamp: The timestamp of this ErrorResponseError.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
