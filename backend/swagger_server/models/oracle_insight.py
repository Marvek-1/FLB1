# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.oracle_insight_factors import OracleInsightFactors  # noqa: F401,E501
from swagger_server.models.oracle_insight_uncertainty_range import OracleInsightUncertaintyRange  # noqa: F401,E501
from swagger_server import util


class OracleInsight(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, prediction: str=None, confidence: float=None, time_horizon: str=None, factors: List[OracleInsightFactors]=None, uncertainty_range: OracleInsightUncertaintyRange=None):  # noqa: E501
        """OracleInsight - a model defined in Swagger

        :param prediction: The prediction of this OracleInsight.  # noqa: E501
        :type prediction: str
        :param confidence: The confidence of this OracleInsight.  # noqa: E501
        :type confidence: float
        :param time_horizon: The time_horizon of this OracleInsight.  # noqa: E501
        :type time_horizon: str
        :param factors: The factors of this OracleInsight.  # noqa: E501
        :type factors: List[OracleInsightFactors]
        :param uncertainty_range: The uncertainty_range of this OracleInsight.  # noqa: E501
        :type uncertainty_range: OracleInsightUncertaintyRange
        """
        self.swagger_types = {
            'prediction': str,
            'confidence': float,
            'time_horizon': str,
            'factors': List[OracleInsightFactors],
            'uncertainty_range': OracleInsightUncertaintyRange
        }

        self.attribute_map = {
            'prediction': 'prediction',
            'confidence': 'confidence',
            'time_horizon': 'time_horizon',
            'factors': 'factors',
            'uncertainty_range': 'uncertainty_range'
        }
        self._prediction = prediction
        self._confidence = confidence
        self._time_horizon = time_horizon
        self._factors = factors
        self._uncertainty_range = uncertainty_range

    @classmethod
    def from_dict(cls, dikt) -> 'OracleInsight':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OracleInsight of this OracleInsight.  # noqa: E501
        :rtype: OracleInsight
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prediction(self) -> str:
        """Gets the prediction of this OracleInsight.


        :return: The prediction of this OracleInsight.
        :rtype: str
        """
        return self._prediction

    @prediction.setter
    def prediction(self, prediction: str):
        """Sets the prediction of this OracleInsight.


        :param prediction: The prediction of this OracleInsight.
        :type prediction: str
        """

        self._prediction = prediction

    @property
    def confidence(self) -> float:
        """Gets the confidence of this OracleInsight.


        :return: The confidence of this OracleInsight.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence: float):
        """Sets the confidence of this OracleInsight.


        :param confidence: The confidence of this OracleInsight.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def time_horizon(self) -> str:
        """Gets the time_horizon of this OracleInsight.


        :return: The time_horizon of this OracleInsight.
        :rtype: str
        """
        return self._time_horizon

    @time_horizon.setter
    def time_horizon(self, time_horizon: str):
        """Sets the time_horizon of this OracleInsight.


        :param time_horizon: The time_horizon of this OracleInsight.
        :type time_horizon: str
        """

        self._time_horizon = time_horizon

    @property
    def factors(self) -> List[OracleInsightFactors]:
        """Gets the factors of this OracleInsight.


        :return: The factors of this OracleInsight.
        :rtype: List[OracleInsightFactors]
        """
        return self._factors

    @factors.setter
    def factors(self, factors: List[OracleInsightFactors]):
        """Sets the factors of this OracleInsight.


        :param factors: The factors of this OracleInsight.
        :type factors: List[OracleInsightFactors]
        """

        self._factors = factors

    @property
    def uncertainty_range(self) -> OracleInsightUncertaintyRange:
        """Gets the uncertainty_range of this OracleInsight.


        :return: The uncertainty_range of this OracleInsight.
        :rtype: OracleInsightUncertaintyRange
        """
        return self._uncertainty_range

    @uncertainty_range.setter
    def uncertainty_range(self, uncertainty_range: OracleInsightUncertaintyRange):
        """Sets the uncertainty_range of this OracleInsight.


        :param uncertainty_range: The uncertainty_range of this OracleInsight.
        :type uncertainty_range: OracleInsightUncertaintyRange
        """

        self._uncertainty_range = uncertainty_range
