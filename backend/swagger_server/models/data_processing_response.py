# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_processing_response_statistics import DataProcessingResponseStatistics  # noqa: F401,E501
from swagger_server import util


class DataProcessingResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, processed_data: List[object]=None, operations_applied: List[str]=None, quality_score: float=None, statistics: DataProcessingResponseStatistics=None):  # noqa: E501
        """DataProcessingResponse - a model defined in Swagger

        :param processed_data: The processed_data of this DataProcessingResponse.  # noqa: E501
        :type processed_data: List[object]
        :param operations_applied: The operations_applied of this DataProcessingResponse.  # noqa: E501
        :type operations_applied: List[str]
        :param quality_score: The quality_score of this DataProcessingResponse.  # noqa: E501
        :type quality_score: float
        :param statistics: The statistics of this DataProcessingResponse.  # noqa: E501
        :type statistics: DataProcessingResponseStatistics
        """
        self.swagger_types = {
            'processed_data': List[object],
            'operations_applied': List[str],
            'quality_score': float,
            'statistics': DataProcessingResponseStatistics
        }

        self.attribute_map = {
            'processed_data': 'processed_data',
            'operations_applied': 'operations_applied',
            'quality_score': 'quality_score',
            'statistics': 'statistics'
        }
        self._processed_data = processed_data
        self._operations_applied = operations_applied
        self._quality_score = quality_score
        self._statistics = statistics

    @classmethod
    def from_dict(cls, dikt) -> 'DataProcessingResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataProcessingResponse of this DataProcessingResponse.  # noqa: E501
        :rtype: DataProcessingResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def processed_data(self) -> List[object]:
        """Gets the processed_data of this DataProcessingResponse.


        :return: The processed_data of this DataProcessingResponse.
        :rtype: List[object]
        """
        return self._processed_data

    @processed_data.setter
    def processed_data(self, processed_data: List[object]):
        """Sets the processed_data of this DataProcessingResponse.


        :param processed_data: The processed_data of this DataProcessingResponse.
        :type processed_data: List[object]
        """

        self._processed_data = processed_data

    @property
    def operations_applied(self) -> List[str]:
        """Gets the operations_applied of this DataProcessingResponse.


        :return: The operations_applied of this DataProcessingResponse.
        :rtype: List[str]
        """
        return self._operations_applied

    @operations_applied.setter
    def operations_applied(self, operations_applied: List[str]):
        """Sets the operations_applied of this DataProcessingResponse.


        :param operations_applied: The operations_applied of this DataProcessingResponse.
        :type operations_applied: List[str]
        """

        self._operations_applied = operations_applied

    @property
    def quality_score(self) -> float:
        """Gets the quality_score of this DataProcessingResponse.


        :return: The quality_score of this DataProcessingResponse.
        :rtype: float
        """
        return self._quality_score

    @quality_score.setter
    def quality_score(self, quality_score: float):
        """Sets the quality_score of this DataProcessingResponse.


        :param quality_score: The quality_score of this DataProcessingResponse.
        :type quality_score: float
        """

        self._quality_score = quality_score

    @property
    def statistics(self) -> DataProcessingResponseStatistics:
        """Gets the statistics of this DataProcessingResponse.


        :return: The statistics of this DataProcessingResponse.
        :rtype: DataProcessingResponseStatistics
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics: DataProcessingResponseStatistics):
        """Sets the statistics of this DataProcessingResponse.


        :param statistics: The statistics of this DataProcessingResponse.
        :type statistics: DataProcessingResponseStatistics
        """

        self._statistics = statistics
