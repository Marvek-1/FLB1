# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TraceChainBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, premises: List[str]=None, target_conclusion: str=None):  # noqa: E501
        """TraceChainBody - a model defined in Swagger

        :param premises: The premises of this TraceChainBody.  # noqa: E501
        :type premises: List[str]
        :param target_conclusion: The target_conclusion of this TraceChainBody.  # noqa: E501
        :type target_conclusion: str
        """
        self.swagger_types = {
            'premises': List[str],
            'target_conclusion': str
        }

        self.attribute_map = {
            'premises': 'premises',
            'target_conclusion': 'target_conclusion'
        }
        self._premises = premises
        self._target_conclusion = target_conclusion

    @classmethod
    def from_dict(cls, dikt) -> 'TraceChainBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The trace_chain_body of this TraceChainBody.  # noqa: E501
        :rtype: TraceChainBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def premises(self) -> List[str]:
        """Gets the premises of this TraceChainBody.


        :return: The premises of this TraceChainBody.
        :rtype: List[str]
        """
        return self._premises

    @premises.setter
    def premises(self, premises: List[str]):
        """Sets the premises of this TraceChainBody.


        :param premises: The premises of this TraceChainBody.
        :type premises: List[str]
        """

        self._premises = premises

    @property
    def target_conclusion(self) -> str:
        """Gets the target_conclusion of this TraceChainBody.


        :return: The target_conclusion of this TraceChainBody.
        :rtype: str
        """
        return self._target_conclusion

    @target_conclusion.setter
    def target_conclusion(self, target_conclusion: str):
        """Sets the target_conclusion of this TraceChainBody.


        :param target_conclusion: The target_conclusion of this TraceChainBody.
        :type target_conclusion: str
        """

        self._target_conclusion = target_conclusion
