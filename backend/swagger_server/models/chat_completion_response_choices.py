# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.chat_message import ChatMessage  # noqa: F401,E501
from swagger_server import util


class ChatCompletionResponseChoices(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, index: int=None, message: ChatMessage=None, finish_reason: str=None):  # noqa: E501
        """ChatCompletionResponseChoices - a model defined in Swagger

        :param index: The index of this ChatCompletionResponseChoices.  # noqa: E501
        :type index: int
        :param message: The message of this ChatCompletionResponseChoices.  # noqa: E501
        :type message: ChatMessage
        :param finish_reason: The finish_reason of this ChatCompletionResponseChoices.  # noqa: E501
        :type finish_reason: str
        """
        self.swagger_types = {
            'index': int,
            'message': ChatMessage,
            'finish_reason': str
        }

        self.attribute_map = {
            'index': 'index',
            'message': 'message',
            'finish_reason': 'finish_reason'
        }
        self._index = index
        self._message = message
        self._finish_reason = finish_reason

    @classmethod
    def from_dict(cls, dikt) -> 'ChatCompletionResponseChoices':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChatCompletionResponse_choices of this ChatCompletionResponseChoices.  # noqa: E501
        :rtype: ChatCompletionResponseChoices
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self) -> int:
        """Gets the index of this ChatCompletionResponseChoices.


        :return: The index of this ChatCompletionResponseChoices.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index: int):
        """Sets the index of this ChatCompletionResponseChoices.


        :param index: The index of this ChatCompletionResponseChoices.
        :type index: int
        """

        self._index = index

    @property
    def message(self) -> ChatMessage:
        """Gets the message of this ChatCompletionResponseChoices.


        :return: The message of this ChatCompletionResponseChoices.
        :rtype: ChatMessage
        """
        return self._message

    @message.setter
    def message(self, message: ChatMessage):
        """Sets the message of this ChatCompletionResponseChoices.


        :param message: The message of this ChatCompletionResponseChoices.
        :type message: ChatMessage
        """

        self._message = message

    @property
    def finish_reason(self) -> str:
        """Gets the finish_reason of this ChatCompletionResponseChoices.


        :return: The finish_reason of this ChatCompletionResponseChoices.
        :rtype: str
        """
        return self._finish_reason

    @finish_reason.setter
    def finish_reason(self, finish_reason: str):
        """Sets the finish_reason of this ChatCompletionResponseChoices.


        :param finish_reason: The finish_reason of this ChatCompletionResponseChoices.
        :type finish_reason: str
        """
        allowed_values = ["stop", "length", "function_call", "content_filter"]  # noqa: E501
        if finish_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `finish_reason` ({0}), must be one of {1}"
                .format(finish_reason, allowed_values)
            )

        self._finish_reason = finish_reason
