# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PilotTestingBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, location: str=None, intervention_type: str=None, parameters: object=None):  # noqa: E501
        """PilotTestingBody - a model defined in Swagger

        :param location: The location of this PilotTestingBody.  # noqa: E501
        :type location: str
        :param intervention_type: The intervention_type of this PilotTestingBody.  # noqa: E501
        :type intervention_type: str
        :param parameters: The parameters of this PilotTestingBody.  # noqa: E501
        :type parameters: object
        """
        self.swagger_types = {
            'location': str,
            'intervention_type': str,
            'parameters': object
        }

        self.attribute_map = {
            'location': 'location',
            'intervention_type': 'intervention_type',
            'parameters': 'parameters'
        }
        self._location = location
        self._intervention_type = intervention_type
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt) -> 'PilotTestingBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pilotTesting_body of this PilotTestingBody.  # noqa: E501
        :rtype: PilotTestingBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self) -> str:
        """Gets the location of this PilotTestingBody.


        :return: The location of this PilotTestingBody.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this PilotTestingBody.


        :param location: The location of this PilotTestingBody.
        :type location: str
        """

        self._location = location

    @property
    def intervention_type(self) -> str:
        """Gets the intervention_type of this PilotTestingBody.


        :return: The intervention_type of this PilotTestingBody.
        :rtype: str
        """
        return self._intervention_type

    @intervention_type.setter
    def intervention_type(self, intervention_type: str):
        """Sets the intervention_type of this PilotTestingBody.


        :param intervention_type: The intervention_type of this PilotTestingBody.
        :type intervention_type: str
        """

        self._intervention_type = intervention_type

    @property
    def parameters(self) -> object:
        """Gets the parameters of this PilotTestingBody.


        :return: The parameters of this PilotTestingBody.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters: object):
        """Sets the parameters of this PilotTestingBody.


        :param parameters: The parameters of this PilotTestingBody.
        :type parameters: object
        """

        self._parameters = parameters
